generator client {
  provider        = "prisma-client-js"
  output          = "./.client"
  runtime = "deno"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Forum {

  id Int @id @default(autoincrement())
  //si es null no se pueden a√±adir
  accessToken String?
  createdAt Date @default(now())
  deletedAt Date?
  topics Topic[]
  users User[]
}


model User {
  nickname String  @id
  name String
  pictureFile String?
  //si es null es que lo administra el admin
  passwordHash String?
  isAdmin Boolean @default(false)
  createdAt Date @default(now())
  //si es marcado como eliminado ya no puede participar
  deletedAt Date?
  topics Topic[]
  replies Reply[]
  replieViews ReplyView[]
  forumId Int 
  forum Forum @relation(fields:[forumId],references:[id],onDelete:Cascade)
  messagesSended Message[] @relation(name:"messagesSended")
  messagesRecived Message[] @relation(name:"messagesRecived")
  @@map("users")
}


model Topic {
  id Int @id @default(autoincrement())
  canAdd Boolean @default(true)
  createdAt Date @default(now())
  deletedAt Date?
  nicknameFrom String 
  from User @relation(fields:[nicknameFrom],references:[nickname],onDelete:Cascade)
  forumId Int 
  forum Forum @relation(fields:[forumId],references:[id],onDelete:Cascade)
  name String
  replies Reply[]
}

model Reply {
  id Int @id @default(autoincrement())
  topicId Int 
  topic Topic @relation(fields:[topicId],references:[id],onDelete:Cascade)
  createdAt Date @default(now())
  updatedAt Date @updatedAt
  deletedAt Date?
  nicknameFrom String 
  from User @relation(fields:[nicknameFrom],references:[nickname],onDelete:Cascade)
  title String?
  message String
  parentId Int?
  parent Reply? @relation(name:"childrenReply",fields:[parentId],references:[id],onDelete:SetNull)
  children Reply[] @relation(name:"childrenReply)
  views ReplyView[]
}

model ReplyView {
  id Int @id @default(autoincrement())
  createdAt Date @default(now())
  replyUpdatedAt Date
  nicknameViewer String 
  viewer User @relation(fields:[nicknameViewer],references:[nickname],onDelete:Cascade)
  replyId Int 
  reply Reply @relation(fields:[replyId],references:[id],onDelete:Cascade)

  @@unique([replyId,nicknameViewer,replyUpdatedAt])
}

model Message {
  id Int @id @default(autoincrement())
  nicknameFrom String 
  from User @relation(name:"messagesSended",fields:[nicknameFrom],references:[nickname],onDelete:Cascade)
  nicknameTo String 
  to User @relation(name:"messagesRecived",fields:[nicknameTo],references:[nickname],onDelete:Cascade)
  message String
  viewedAt Date?
  createdAt Date @default(now())
  deletedAt Date?
}